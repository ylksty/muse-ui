import router from '../internal/router'
export default {
  menu: {
    props: [{
      name: 'desktop',
      type: 'Boolean',
      default: 'false',
      desc: 'menu.props.desktop'
    }, {
      name: 'multiple',
      type: 'Boolean',
      default: 'false',
      desc: 'menu.props.multiple'
    }, {
      name: 'autoWidth',
      type: 'Boolean',
      default: 'true',
      desc: 'menu.props.autoWidth'
    }, {
      name: 'width',
      type: 'String, Number',
      default: '',
      desc: 'menu.props.width'
    }, {
      name: 'maxHeight',
      type: 'Number',
      default: '',
      desc: 'menu.props.maxHeight'
    }, {
      name: 'disableAutoFocus',
      type: 'Boolean',
      default: 'false',
      desc: 'menu.props.disableAutoFocus'
    }, {
      name: 'initiallyKeyboardFocused',
      type: 'Boolean',
      default: 'false',
      desc: 'menu.props.initiallyKeyboardFocused'
    }, {
      name: 'listClass',
      type: 'String,Object,Array',
      default: '',
      desc: 'menu.props.listClass'
    }, {
      name: 'value',
      type: '',
      default: '',
      desc: 'menu.props.value'
    }],
    slots: [{
      name: 'default',
      desc: 'menu.slots.default'
    }],
    events: [{
      name: 'itemClick',
      desc: 'menu.events.itemClick'
    }, {
      name: 'change',
      desc: 'menu.events.change'
    }]
  },
  menuItem: {
    props: [{
      name: 'href',
      type: 'String',
      default: '',
      desc: 'menuItem.props.href'
    }, ...router, {
      name: 'target',
      type: 'String',
      default: '',
      desc: 'menuItem.props.target'
    }, {
      name: 'title',
      type: 'String',
      default: '',
      desc: 'menuItem.props.title'
    }, {
      name: 'titleClass',
      type: 'String,Object,Array',
      default: '',
      desc: 'menuItem.props.titleClass'
    }, {
      name: 'afterText',
      type: 'String',
      default: '',
      desc: 'menuItem.props.afterText'
    }, {
      name: 'afterTextClass',
      type: 'String,Object,Array',
      default: '',
      desc: 'menuItem.props.afterTextClass'
    }, {
      name: 'inset',
      type: 'Boolean',
      default: 'false',
      desc: 'menuItem.props.inset'
    }, {
      name: 'disableFocusRipple',
      type: 'Boolean',
      default: 'false',
      desc: 'menuItem.props.disableFocusRipple'
    }, {
      name: 'disabled',
      type: 'Boolean',
      default: 'false',
      desc: 'menuItem.props.disabled'
    }, {
      name: 'leftIcon',
      type: 'String',
      default: '',
      desc: 'menuItem.props.leftIcon'
    }, {
      name: 'leftIconColor',
      type: 'String',
      default: '',
      desc: 'menuItem.props.leftIconColor'
    }, {
      name: 'leftIconClass',
      type: 'String,Object,Array',
      default: '',
      desc: 'menuItem.props.leftIconClass'
    }, {
      name: 'rightIcon',
      type: 'String',
      default: '',
      desc: 'menuItem.props.rightIcon'
    }, {
      name: 'rightIconColor',
      type: 'String',
      default: '',
      desc: 'menuItem.props.rightIconColor'
    }, {
      name: 'rightIconClass',
      type: 'String,Object,Array',
      default: '',
      desc: 'menuItem.props.rightIconClass'
    }, {
      name: 'nestedMenuClass',
      type: 'String,Object,Array',
      default: '',
      desc: 'menuItem.props.nestedMenuClass'
    }, {
      name: 'nestedMenuListClass',
      type: 'String,Object,Array',
      default: '',
      desc: 'menuItem.props.nestedMenuListClass'
    }, {
      name: 'value',
      type: '',
      default: '',
      desc: 'menuItem.props.value'
    }, {
      name: 'nestedMenuValue',
      type: '',
      default: '',
      desc: 'menuItem.props.nestedMenuValue'
    }],
    slots: [{
      name: 'title',
      desc: 'menuItem.slots.title'
    }, {
      name: 'after',
      desc: 'menuItem.slots.after'
    }, {
      name: 'default',
      desc: 'menuItem.slots.default'
    }],
    events: [{
      name: 'click',
      desc: 'menuItem.events.click'
    }, {
      name: 'hover',
      desc: 'menuItem.events.hover'
    }, {
      name: 'hoverExit',
      desc: 'menuItem.events.hoverExit'
    }, {
      name: 'keyboardFocus',
      desc: 'menuItem.events.keyboardFocus'
    }]
  }
}
